openapi: 3.0.1
info:
  title: AgiliumTrade MetaTrader client REST API
  version: 1.0.0
servers:
- url: https://mt-client-api-v1.new-york.agiliumtrade.ai/
  description: host endpoint
paths:
  /users/current/accounts/{accountId}/accountInformation:
    get:
      summary: Returns account information for a trading account
      description: Returns account information for a trading account. Requires access to metaapi-api:rest:public:terminal-state:getAccountInformation method which is included into reader role. Requires access to account resource.
      parameters:
        - name: auth-token
          in: header
          description: authorization token
          required: true
          schema:
            type: string
        - name: accountId
          in: path
          description: Trading account id
          required: true
          schema:
            type: string
        - name: refreshTerminalState
          in: query
          description: Whether to refresh terminal state before retrieving the data, slowing down the request
          schema:
            type: boolean
      responses:
        "200":
          description: Account information for a specified MetaTrader account returned successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetatraderAccountInformation"
        "401":
          description: Authorization failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Authorization token has no access to metaapi-api:rest:public:terminal-state:getAccountInformation method.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: MetaTrader account not found or not provisioned yet
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Unexpected application error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-authorization:
        method: metaapi-api:rest:public:terminal-state:getAccountInformation
        roles:
          - reader
        resources:
          - account
components:
  schemas:
    MetatraderAccountInformation:
      required:
      - accountCurrencyExchangeRate
      - balance
      - broker
      - credit
      - currency
      - equity
      - freeMargin
      - leverage
      - login
      - margin
      - marginMode
      - name
      - platform
      - server
      - tradeAllowed
      - type
      type: object
      properties:
        platform:
          type: string
          description: platform id (mt4 or mt5)
          enum:
          - mt4
          - mt5
        broker:
          type: string
          description: broker name
        currency:
          type: string
          description: account base currency
        server:
          type: string
          description: broker server name
        balance:
          type: number
          description: account balance
        equity:
          type: number
          description: account liquidation value
        margin:
          type: number
          description: margin used
        freeMargin:
          type: number
          description: free margin
        leverage:
          type: number
          description: account leverage
        marginLevel:
          type: number
          description: margin level calculated as % of equity/margin
        tradeAllowed:
          type: boolean
          description: flag indicating that trading is allowed
        investorMode:
          type: boolean
          description: flag indicating that investor password was used (supported
            for g2 only)
        marginMode:
          type: string
          description: margin calculation mode
          enum:
          - ACCOUNT_MARGIN_MODE_EXCHANGE
          - ACCOUNT_MARGIN_MODE_RETAIL_NETTING
          - ACCOUNT_MARGIN_MODE_RETAIL_HEDGING
        name:
          type: string
          description: account owner name
        login:
          type: number
          description: account login
        credit:
          type: number
          description: account credit in the deposit currency
        accountCurrencyExchangeRate:
          type: number
          description: current exchange rate of account currency into USD
        type:
          type: string
          description: account type
          enum:
          - ACCOUNT_TRADE_MODE_DEMO
          - ACCOUNT_TRADE_MODE_CONTEST
          - ACCOUNT_TRADE_MODE_REAL
    MetatraderPosition:
      required:
      - brokerTime
      - commission
      - currentPrice
      - currentTickValue
      - id
      - magic
      - openPrice
      - profit
      - realizedCommission
      - realizedProfit
      - realizedSwap
      - reason
      - swap
      - symbol
      - time
      - type
      - unrealizedCommission
      - unrealizedProfit
      - unrealizedSwap
      - updateTime
      - volume
      type: object
      properties:
        id:
          type: string
          description: position id (ticket)
        type:
          type: string
          description: position type
          enum:
          - POSITION_TYPE_BUY
          - POSITION_TYPE_SELL
        symbol:
          type: string
          description: position symbol
        magic:
          type: number
          description: position magic number, identifies the EA which opened the position
          format: integer
        time:
          type: string
          description: time position was opened at, in ISO format
          format: datetime
        brokerTime:
          type: string
          description: time position was opened at, in broker timezone, YYYY-MM-DD
            HH:mm:ss.SSS format
        updateTime:
          type: string
          description: last position modification time, in ISO format
          format: datetime
        openPrice:
          type: number
          description: position open price
        currentPrice:
          type: number
          description: current price
        currentTickValue:
          type: number
          description: current tick value
        stopLoss:
          type: number
          description: optional position stop loss price
        takeProfit:
          type: number
          description: optional position take profit price
        trailingStopLoss:
          $ref: '#/components/schemas/TrailingStopLoss'
        volume:
          type: number
          description: position volume
        swap:
          type: number
          description: position cumulative swap, including both swap from currently
            open position part (unrealized swap) and swap from partially closed position
            part (realized swap)
        unrealizedSwap:
          type: number
          description: swap resulting from currently open position part
        realizedSwap:
          type: number
          description: swap from partially closed position part
        profit:
          type: number
          description: position cumulative profit, including unrealized profit resulting
            from currently open position part (except swap and commissions) and realized
            profit resulting from partially closed position part and including swap
            and commissions
        unrealizedProfit:
          type: number
          description: profit of the part of the position which is not yet closed,
            excluding swap and commissions
        realizedProfit:
          type: number
          description: profit of the already closed part, including commissions and
            swap (realized and unrealized)
        commission:
          type: number
          description: total position commissions, resulting both from currently open
            and closed position parts
        realizedCommission:
          type: number
          description: position realized commission, resulting from partially closed
            position part
        unrealizedCommission:
          type: number
          description: position unrealized commission, resulting from currently open
            position part
        comment:
          type: string
          description: optional position comment
        clientId:
          type: string
          description: optional client-assigned position id. For more information
            see https://metaapi.cloud/docs/client/clientIdUsage/
        reason:
          type: string
          description: position opening reason. See https://www.mql5.com/en/docs/constants/tradingconstants/positionproperties#enum_position_reason
          enum:
          - POSITION_REASON_CLIENT
          - POSITION_REASON_EXPERT
          - POSITION_REASON_MOBILE
          - POSITION_REASON_WEB
          - POSITION_REASON_UNKNOWN
        accountCurrencyExchangeRate:
          type: number
          description: current exchange rate of account currency into USD
        brokerComment:
          type: string
          description: optional, current comment value on broker side (possibly overriden
            by the broker)
    MetatraderOrder:
      required:
      - brokerTime
      - currentVolume
      - expirationType
      - fillingMode
      - id
      - magic
      - openPrice
      - platform
      - positionId
      - reason
      - state
      - symbol
      - time
      - type
      - volume
      type: object
      properties:
        id:
          type: string
          description: order id (ticket)
        type:
          type: string
          description: order type
          enum:
          - ORDER_TYPE_SELL
          - ORDER_TYPE_BUY
          - ORDER_TYPE_BUY_LIMIT
          - ORDER_TYPE_SELL_LIMIT
          - ORDER_TYPE_BUY_STOP
          - ORDER_TYPE_SELL_STOP
          - ORDER_TYPE_BUY_STOP_LIMIT
          - ORDER_TYPE_SELL_STOP_LIMIT
          - ORDER_TYPE_CLOSE_BY
        state:
          type: string
          description: order state
          enum:
          - ORDER_STATE_STARTED
          - ORDER_STATE_PLACED
          - ORDER_STATE_CANCELED
          - ORDER_STATE_PARTIAL
          - ORDER_STATE_FILLED
          - ORDER_STATE_REJECTED
          - ORDER_STATE_EXPIRED
          - ORDER_STATE_REQUEST_ADD
          - ORDER_STATE_REQUEST_MODIFY
          - ORDER_STATE_REQUEST_CANCEL
        magic:
          type: number
          description: order magic number, identifies the EA which created the order
          format: integer
        time:
          type: string
          description: time order was created at, in ISO format
          format: datetime
        brokerTime:
          type: string
          description: time order was created at, in broker timezone, YYYY-MM-DD HH:mm:ss.SSS
            format
        doneTime:
          type: string
          description: optional time order was executed or canceled at, in ISO format.
            Will be specified for completed orders only
          format: datetime
        doneBrokerTime:
          type: string
          description: optional time order was executed or canceled at, in broker
            timezone, YYYY-MM-DD HH:mm:ss.SSS format. Will be specified for completed
            orders only
        symbol:
          type: string
          description: order symbol
        openPrice:
          type: number
          description: order open price (market price for market orders, limit price
            for limit orders or stop price for stop orders)
        stopLimitPrice:
          type: number
          description: the Limit order price for the StopLimit order
        currentPrice:
          type: number
          description: current price. Filled for pending orders only. Not filled for
            history orders.
        stopLoss:
          type: number
          description: optional order stop loss price
        takeProfit:
          type: number
          description: optional order take profit price
        trailingStopLoss:
          $ref: '#/components/schemas/TrailingStopLoss'
        volume:
          type: number
          description: order requested quantity
        currentVolume:
          type: number
          description: order remaining quantity, i.e. requested quantity - filled
            quantity
        positionId:
          type: string
          description: order position id. Present only if the order has a position
            attached to it
        comment:
          type: string
          description: optional order comment
        brokerComment:
          type: string
          description: optional, current comment value on broker side (possibly overriden
            by the broker)
        clientId:
          type: string
          description: optional client-assigned order id. For more information see
            https://metaapi.cloud/docs/client/clientIdUsage/
        platform:
          type: string
          description: platform id (mt4 or mt5)
          enum:
          - mt4
          - mt5
        reason:
          type: string
          description: order opening reason. See https://www.mql5.com/en/docs/constants/tradingconstants/orderproperties#enum_order_reason
          enum:
          - ORDER_REASON_CLIENT
          - ORDER_REASON_MOBILE
          - ORDER_REASON_WEB
          - ORDER_REASON_EXPERT
          - ORDER_REASON_SL
          - ORDER_REASON_TP
          - ORDER_REASON_SO
          - ORDER_REASON_UNKNOWN
        fillingMode:
          type: string
          description: order filling mode. See https://www.mql5.com/en/docs/constants/tradingconstants/orderproperties#enum_order_type_filling
          enum:
          - ORDER_FILLING_FOK
          - ORDER_FILLING_IOC
          - ORDER_FILLING_RETURN
        expirationType:
          type: string
          description: order expiration type. See https://www.mql5.com/en/docs/constants/tradingconstants/orderproperties#enum_order_type_time
          enum:
          - ORDER_TIME_GTC
          - ORDER_TIME_DAY
          - ORDER_TIME_SPECIFIED
          - ORDER_TIME_SPECIFIED_DAY
        expirationTime:
          type: string
          description: optional order expiration time
          format: datetime
        accountCurrencyExchangeRate:
          type: number
          description: current exchange rate of account currency into USD
        closeByPositionId:
          type: string
          description: identifier of an opposite position used for closing by order
            ORDER_TYPE_CLOSE_BY
    MetatraderDeal:
      required:
      - brokerTime
      - id
      - platform
      - profit
      - time
      - type
      type: object
      properties:
        id:
          type: string
          description: history deal id (ticket)
        type:
          type: string
          description: deal type
          enum:
          - DEAL_TYPE_BUY
          - DEAL_TYPE_SELL
          - DEAL_TYPE_BALANCE
          - DEAL_TYPE_CREDIT
          - DEAL_TYPE_CHARGE
          - DEAL_TYPE_CORRECTION
          - DEAL_TYPE_BONUS
          - DEAL_TYPE_COMMISSION
          - DEAL_TYPE_COMMISSION_DAILY
          - DEAL_TYPE_COMMISSION_MONTHLY
          - DEAL_TYPE_COMMISSION_AGENT_DAILY
          - DEAL_TYPE_COMMISSION_AGENT_MONTHLY
          - DEAL_TYPE_INTEREST
          - DEAL_TYPE_BUY_CANCELED
          - DEAL_TYPE_SELL_CANCELED
          - DEAL_DIVIDEND
          - DEAL_DIVIDEND_FRANKED
          - DEAL_TAX
        entryType:
          type: string
          description: deal entry type
          enum:
          - DEAL_ENTRY_IN
          - DEAL_ENTRY_OUT
          - DEAL_ENTRY_INOUT
          - DEAL_ENTRY_OUT_BY
        symbol:
          type: string
          description: optional symbol deal relates to
        magic:
          type: number
          description: optional deal magic number, identifies the EA which initiated
            the deal
          format: integer
        time:
          type: string
          description: time the deal was conducted at, in ISO format
          format: datetime
        brokerTime:
          type: string
          description: time the deal was conducted at, in broker timezone, YYYY-MM-DD
            HH:mm:ss.SSS format
        volume:
          type: number
          description: optional deal quantity
        price:
          type: number
          description: optional, the price the deal was conducted at
        commission:
          type: number
          description: optional deal commission
        swap:
          type: number
          description: optional deal swap
        profit:
          type: number
          description: deal profit
        positionId:
          type: string
          description: optional id of position the deal relates to
        orderId:
          type: string
          description: optional id of order the deal relates to
        comment:
          type: string
          description: optional deal comment
        brokerComment:
          type: string
          description: optional, current deal comment value on broker side (possibly
            overriden by the broker)
        clientId:
          type: string
          description: optional client-assigned deal id. For more information see
            https://metaapi.cloud/docs/client/clientIdUsage/
        platform:
          type: string
          description: platform id (mt4 or mt5)
          enum:
          - mt4
          - mt5
        reason:
          type: string
          description: optional deal execution reason. See https://www.mql5.com/en/docs/constants/tradingconstants/dealproperties#enum_deal_reason
          enum:
          - DEAL_REASON_CLIENT
          - DEAL_REASON_MOBILE
          - DEAL_REASON_WEB
          - DEAL_REASON_EXPERT
          - DEAL_REASON_SL
          - DEAL_REASON_TP
          - DEAL_REASON_SO
          - DEAL_REASON_ROLLOVER
          - DEAL_REASON_VMARGIN
          - DEAL_REASON_SPLIT
          - DEAL_REASON_UNKNOWN
        accountCurrencyExchangeRate:
          type: number
          description: current exchange rate of account currency into USD
        stopLoss:
          type: number
          description: deal stop loss. For MT5 opening deal this is the SL of the
            order opening the position. For MT4 deals or MT5 closing deal this is
            the last known position SL.
        takeProfit:
          type: number
          description: deal take profit. For MT5 opening deal this is the TP of the
            order opening the position. For MT4 deals or MT5 closing deal this is
            the last known position TP.
    MetatraderTrade:
      required:
      - actionType
      type: object
      properties:
        symbol:
          type: string
          description: optional symbol to trade
        actionType:
          type: string
          description: trade type
          enum:
          - ORDER_TYPE_SELL
          - ORDER_TYPE_BUY
          - ORDER_TYPE_BUY_LIMIT
          - ORDER_TYPE_SELL_LIMIT
          - ORDER_TYPE_BUY_STOP
          - ORDER_TYPE_SELL_STOP
          - POSITION_MODIFY
          - POSITION_PARTIAL
          - POSITION_CLOSE_ID
          - POSITIONS_CLOSE_SYMBOL
          - ORDER_MODIFY
          - ORDER_CANCEL
          - POSITION_CLOSE_BY
          - ORDER_TYPE_BUY_STOP_LIMIT
          - ORDER_TYPE_SELL_STOP_LIMIT
        volume:
          type: number
          description: optional order volume
        openPrice:
          type: number
          description: optional order limit or stop price
        stopLimitPrice:
          type: number
          description: optional price at which the StopLimit order will be placed.
            Required for stop limit orders
        stopLoss:
          type: number
          description: optional stop loss price
        takeProfit:
          type: number
          description: optional take profit price
        stopLossUnits:
          type: string
          description: stop loss units. ABSOLUTE_PRICE means the that the value of
            stopLoss field is a final stop loss value. RELATIVE_* means that the stopLoss
            field value contains relative stop loss expressed either in price, points,
            pips, account currency or balance percentage. Default is ABSOLUTE_PRICE
          enum:
          - ABSOLUTE_PRICE
          - RELATIVE_PRICE
          - RELATIVE_POINTS
          - RELATIVE_PIPS
          - RELATIVE_CURRENCY
          - RELATIVE_BALANCE_PERCENTAGE
        takeProfitUnits:
          type: string
          description: take profit units. ABSOLUTE_PRICE means the that the value
            of takeProfit field is a final take profit value. RELATIVE_* means that
            the takeProfit field value contains relative take profit expressed either
            in price, points, pips, account currency or balance percentage. Default
            is ABSOLUTE_PRICE
          enum:
          - ABSOLUTE_PRICE
          - RELATIVE_PRICE
          - RELATIVE_POINTS
          - RELATIVE_PIPS
          - RELATIVE_CURRENCY
          - RELATIVE_BALANCE_PERCENTAGE
        stopPriceBase:
          type: string
          description: defined the base price to calculate SL/TP relative to for *_MODIFY
            and pending order requests. STOP_PRICE means the SL/TP is relative to
            previous SL/TP value. Default is OPEN_PRICE.
          enum:
          - CURRENT_PRICE
          - OPEN_PRICE
          - STOP_PRICE
        openPriceUnits:
          type: string
          description: open price units. ABSOLUTE_PRICE means the that the value of
            openPrice field is a final open price value. RELATIVE_* means that the
            openPrice field value contains relative open price expressed either in
            price, points, pips, account currency or balance percentage. Default is
            ABSOLUTE_PRICE
          enum:
          - ABSOLUTE_PRICE
          - RELATIVE_PRICE
          - RELATIVE_POINTS
          - RELATIVE_PIPS
          - RELATIVE_CURRENCY
          - RELATIVE_BALANCE_PERCENTAGE
        openPriceBase:
          type: string
          description: defined the base price to calculate open price relative to
            for ORDER_MODIFY and pending order requests. Default is CURRENT_PRICE
            for pending orders or STOP_LIMIT_PRICE for stop limit orders.
          enum:
          - CURRENT_PRICE
          - OPEN_PRICE
          - STOP_LIMIT_PRICE
        stopLimitPriceUnits:
          type: string
          description: stop limit price units. ABSOLUTE_PRICE means the that the value
            of stopLimitPrice field is a final stop limit price value. RELATIVE_*
            means that the stopLimitPrice field value contains relative stop limit
            price expressed either in price, points, pips, account currency or balance
            percentage. Default is ABSOLUTE_PRICE
          enum:
          - ABSOLUTE_PRICE
          - RELATIVE_PRICE
          - RELATIVE_POINTS
          - RELATIVE_PIPS
          - RELATIVE_CURRENCY
          - RELATIVE_BALANCE_PERCENTAGE
        stopLimitPriceBase:
          type: string
          description: defined the base price to calculate stop limit price relative
            to for ORDER_MODIFY requests.
          enum:
          - CURRENT_PRICE
          - STOP_LIMIT_PRICE
        trailingStopLoss:
          $ref: '#/components/schemas/TrailingStopLoss'
        orderId:
          type: string
          description: optional order id, must be specified for order modification
            commands
        positionId:
          type: string
          description: optional position id, must be specified for position modification
            commands
        closeByPositionId:
          type: string
          description: identifier of an opposite position used for closing by order,
            required in case actionType is POSITION_CLOSE_BY
        comment:
          type: string
          description: optional comment
        clientId:
          type: string
          description: optional client-assigned order id. For more information see
            https://metaapi.cloud/docs/client/clientIdUsage/
        magic:
          type: number
          description: magic value (expert adviser id)
          format: integer
        slippage:
          type: number
          description: slippage in points. Should be greater or equal to zero. In
            not set, default value specified in account entity will be used. Slippage
            is ignored on position modification, order modification and order cancellation
            calls. Slippage is also ignored if execution mode set in symbol specification
            is SYMBOL_TRADE_EXECUTION_MARKET
          format: integer
        fillingModes:
          type: array
          description: allowed filling modes in the order of priority. Default is
            to allow all filling modes and prefer ORDER_FILLING_FOK over ORDER_FILLING_IOC.
            See https://www.mql5.com/en/docs/constants/tradingconstants/orderproperties#enum_order_type_filling
            for extra explanation
          items:
            type: string
            enum:
            - ORDER_FILLING_FOK
            - ORDER_FILLING_IOC
        expiration:
          required:
          - type
          type: object
          properties:
            type:
              type: string
              description: pending order expiration type. See https://www.mql5.com/en/docs/constants/tradingconstants/orderproperties#enum_order_type_time
                for the list of possible options. MetaTrader4 platform supports only
                ORDER_TIME_SPECIFIED expiration type
              enum:
              - ORDER_TIME_GTC
              - ORDER_TIME_DAY
              - ORDER_TIME_SPECIFIED
              - ORDER_TIME_SPECIFIED_DAY
            time:
              type: string
              description: pending order expiration time. Ignored if expiration type
                is not one of ORDER_TIME_DAY or ORDER_TIME_SPECIFIED
              format: datetime
          description: pending order expiration settings
    TrailingStopLoss:
      type: object
      properties:
        distance:
          $ref: '#/components/schemas/DistanceTrailingStopLoss'
        threshold:
          $ref: '#/components/schemas/ThresholdTrailingStopLoss'
      description: trailing stop loss configuration
    DistanceTrailingStopLoss:
      required:
      - distance
      type: object
      properties:
        distance:
          type: number
          description: SL distance relative to current price, interpreted according
            to units field value
        units:
          type: string
          description: distance trailing stop loss units. RELATIVE_* means that the
            distance field value contains relative stop loss expressed either in price,
            points, pips, account currency or balance percentage. Default is RELATIVE_PRICE
          enum:
          - RELATIVE_PRICE
          - RELATIVE_POINTS
          - RELATIVE_PIPS
          - RELATIVE_CURRENCY
          - RELATIVE_BALANCE_PERCENTAGE
      description: distance trailing stop loss configuration
    ThresholdTrailingStopLoss:
      required:
      - thresholds
      type: object
      properties:
        thresholds:
          type: array
          description: stop loss thresholds
          items:
            $ref: '#/components/schemas/StopLossThreshold'
        units:
          type: string
          description: threshold stop loss units. ABSOLUTE_PRICE means the that the
            value of stop loss threshold fields contain a final threshold & stop loss
            value. RELATIVE_* means that the threshold fields value contains relative
            threshold & stop loss values, expressed either in price, points, pips,
            account currency or balance percentage. Default is ABSOLUTE_PRICE
          enum:
          - ABSOLUTE_PRICE
          - RELATIVE_PRICE
          - RELATIVE_POINTS
          - RELATIVE_PIPS
          - RELATIVE_CURRENCY
          - RELATIVE_BALANCE_PERCENTAGE
        stopPriceBase:
          type: string
          description: defined the base price to calculate SL relative to for POSITION_MODIFY
            requests. Default is OPEN_PRICE.
          enum:
          - CURRENT_PRICE
          - OPEN_PRICE
      description: threshold trailing stop loss configuration
    StopLossThreshold:
      required:
      - stopLoss
      - threshold
      type: object
      properties:
        threshold:
          type: number
          description: price threshold relative to position open price, interpreted
            according to units field value
        stopLoss:
          type: number
          description: stop loss value, interpreted according to units and basePrice
            field values
      description: configuration of a single threshold stop loss
    MetatraderTradeResponse:
      required:
      - message
      - numericCode
      - stringCode
      type: object
      properties:
        numericCode:
          type: number
          description: numeric response code, see https://www.mql5.com/en/docs/constants/errorswarnings/enum_trade_return_codes
            and https://book.mql4.com/appendix/errors. Response codes which indicate
            success are 0, 10008-10010, 10025. The rest codes are errors.
        stringCode:
          type: string
          description: string response code, see https://www.mql5.com/en/docs/constants/errorswarnings/enum_trade_return_codes
            and https://book.mql4.com/appendix/errors. Response codes which indicate
            success are ERR_NO_ERROR, TRADE_RETCODE_PLACED, TRADE_RETCODE_DONE, TRADE_RETCODE_DONE_PARTIAL,
            TRADE_RETCODE_NO_CHANGES. The rest codes are errors.
        message:
          type: string
          description: human-readable error message
        orderId:
          type: string
          description: optional, id of the order created or modified by the trade
        positionId:
          type: string
          description: optional, id of the position created or modified by the trade
    MetatraderSymbolSpecification:
      required:
      - allowedExpirationModes
      - allowedOrderTypes
      - baseCurrency
      - contractSize
      - description
      - digits
      - executionMode
      - fillingModes
      - freezeLevel
      - hedgedMargin
      - initialMargin
      - maintenanceMargin
      - marginCurrency
      - maxVolume
      - minVolume
      - point
      - priceCalculationMode
      - quoteSessions
      - stopsLevel
      - swapMode
      - symbol
      - tickSize
      - tradeSessions
      - volumeStep
      type: object
      properties:
        symbol:
          type: string
          description: symbol (e.g. currency pair or an index)
        tickSize:
          type: number
          description: tick size
        minVolume:
          type: number
          description: minimum order volume for the symbol
        maxVolume:
          type: number
          description: maximum order volume for the symbol
        volumeStep:
          type: number
          description: order volume step for the symbol
        fillingModes:
          type: array
          description: list of allowed order filling modes. See https://www.mql5.com/en/docs/constants/tradingconstants/orderproperties#enum_order_type_filling
            for extra explanation.
          items:
            type: string
            enum:
            - ORDER_FILLING_FOK
            - ORDER_FILLING_IOC
        executionMode:
          type: string
          description: deal execution mode
          enum:
          - SYMBOL_TRADE_EXECUTION_REQUEST
          - SYMBOL_TRADE_EXECUTION_INSTANT
          - SYMBOL_TRADE_EXECUTION_MARKET
          - SYMBOL_TRADE_EXECUTION_EXCHANGE
        contractSize:
          type: number
          description: trade contract size
        quoteSessions:
          $ref: '#/components/schemas/MetatraderSessions'
        tradeSessions:
          $ref: '#/components/schemas/MetatraderSessions'
        tradeMode:
          type: string
          description: order execution type. See https://www.mql5.com/en/docs/constants/environment_state/marketinfoconstants#enum_symbol_trade_mode
          enum:
          - SYMBOL_TRADE_MODE_DISABLED
          - SYMBOL_TRADE_MODE_LONGONLY
          - SYMBOL_TRADE_MODE_SHORTONLY
          - SYMBOL_TRADE_MODE_CLOSEONLY
          - SYMBOL_TRADE_MODE_FULL
        bondAccruedInterest:
          type: number
          description: accrued interest – accumulated coupon interest, i.e. part of
            the coupon interest calculated in proportion to the number of days since
            the coupon bond issuance or the last coupon interest payment
        bondFaceValue:
          type: number
          description: face value – initial bond value set by the issuer
        optionStrike:
          type: number
          description: the strike price of an option. The price at which an option
            buyer can buy (in a Call option) or sell (in a Put option) the underlying
            asset, and the option seller is obliged to sell or buy the appropriate
            amount of the underlying asset.
        optionPriceSensivity:
          type: number
          description: option/warrant sensitivity shows by how many points the price
            of the option's underlying asset should change so that the price of the
            option changes by one point
        liquidityRate:
          type: number
          description: liquidity Rate is the share of the asset that can be used for
            the margin
        initialMargin:
          type: number
          description: initial margin means the amount in the margin currency required
            for opening a position with the volume of one lot. It is used for checking
            a client's assets when he or she enters the market
        maintenanceMargin:
          type: number
          description: the maintenance margin. If it is set, it sets the margin amount
            in the margin currency of the symbol, charged from one lot. It is used
            for checking a client's assets when his/her account state changes. If
            the maintenance margin is equal to 0, the initial margin is used
        hedgedMargin:
          type: number
          description: contract size or margin value per one lot of hedged positions
            (oppositely directed positions of one symbol). Two margin calculation
            methods are possible for hedged positions. The calculation method is defined
            by the broker
        hedgedMarginUsesLargerLeg:
          type: boolean
          description: calculating hedging margin using the larger leg (Buy or Sell)
        priceCalculationMode:
          type: string
          description: contract price calculation mode (see https://www.mql5.com/en/docs/constants/environment_state/marketinfoconstants#enum_symbol_calc_mode)
          enum:
          - SYMBOL_CALC_MODE_UNKNOWN
          - SYMBOL_CALC_MODE_FOREX
          - SYMBOL_CALC_MODE_FOREX_NO_LEVERAGE
          - SYMBOL_CALC_MODE_FUTURES
          - SYMBOL_CALC_MODE_CFD
          - SYMBOL_CALC_MODE_CFDINDEX
          - SYMBOL_CALC_MODE_CFDLEVERAGE
          - SYMBOL_CALC_MODE_EXCH_STOCKS
          - SYMBOL_CALC_MODE_EXCH_FUTURES
          - SYMBOL_CALC_MODE_EXCH_FUTURES_FORTS
          - SYMBOL_CALC_MODE_EXCH_BONDS
          - SYMBOL_CALC_MODE_EXCH_STOCKS_MOEX
          - SYMBOL_CALC_MODE_EXCH_BONDS_MOEX
          - SYMBOL_CALC_MODE_SERV_COLLATERAL
        marginCurrency:
          type: string
          description: margin currency
        baseCurrency:
          type: string
          description: base currency
        profitCurrency:
          type: string
          description: profit currency
        swapMode:
          type: string
          description: swap calculation model. See https://www.mql5.com/en/docs/constants/environment_state/marketinfoconstants#enum_symbol_swap_mode
          enum:
          - SYMBOL_SWAP_MODE_DISABLED
          - SYMBOL_SWAP_MODE_POINTS
          - SYMBOL_SWAP_MODE_CURRENCY_SYMBOL
          - SYMBOL_SWAP_MODE_CURRENCY_MARGIN
          - SYMBOL_SWAP_MODE_CURRENCY_DEPOSIT
          - SYMBOL_SWAP_MODE_INTEREST_CURRENT
          - SYMBOL_SWAP_MODE_INTEREST_OPEN
          - SYMBOL_SWAP_MODE_REOPEN_CURRENT
          - SYMBOL_SWAP_MODE_REOPEN_BID
        swapLong:
          type: number
          description: long swap value
        swapShort:
          type: number
          description: short swap value
        swapRollover3Days:
          type: string
          description: day of week to charge 3 days swap rollover
          enum:
          - SUNDAY
          - MONDAY
          - TUESDAY
          - WEDNESDAY
          - THURDAY
          - FRIDAY
          - SATURDAY
          - NONE
        allowedExpirationModes:
          type: array
          description: allowed order expiration modes. See https://www.mql5.com/en/docs/constants/environment_state/marketinfoconstants#symbol_expiration_mode
          items:
            type: string
            enum:
            - SYMBOL_EXPIRATION_GTC
            - SYMBOL_EXPIRATION_DAY
            - SYMBOL_EXPIRATION_SPECIFIED
            - SYMBOL_EXPIRATION_SPECIFIED_DAY
        allowedOrderTypes:
          type: array
          description: allowed order types. See https://www.mql5.com/en/docs/constants/environment_state/marketinfoconstants#symbol_order_mode
          items:
            type: string
            enum:
            - SYMBOL_ORDER_MARKET
            - SYMBOL_ORDER_LIMIT
            - SYMBOL_ORDER_STOP
            - SYMBOL_ORDER_STOP_LIMIT
            - SYMBOL_ORDER_SL
            - SYMBOL_ORDER_TP
            - SYMBOL_ORDER_CLOSEBY
        orderGTCMode:
          type: string
          description: if the expirationMode property is set to SYMBOL_EXPIRATION_GTC
            (good till canceled), the expiration of pending orders, as well as of
            Stop Loss/Take Profit orders should be additionally set using this enumeration.
            See https://www.mql5.com/en/docs/constants/environment_state/marketinfoconstants#enum_symbol_order_gtc_mode
          enum:
          - SYMBOL_ORDERS_GTC
          - SYMBOL_ORDERS_DAILY
          - SYMBOL_ORDERS_DAILY_EXCLUDING_STOPS
        digits:
          type: number
          description: digits after a decimal point
        point:
          type: number
          description: point size
        path:
          type: string
          description: path in the symbol tree
        description:
          type: string
          description: symbol description
        startTime:
          type: string
          description: date of the symbol trade beginning (usually used for futures)
          format: datetime
        expirationTime:
          type: string
          description: date of the symbol trade end (usually used for futures)
          format: datetime
        pipSize:
          type: number
          description: size of a pip. Pip size is defined for spot and CFD symbols
            only
        stopsLevel:
          type: number
          description: minimal distance from the current market price to stop price
            (SL, TP, open price) in points. The SL, TP, open price can not be placed
            closer to market price than this distance
        freezeLevel:
          type: number
          description: distance in points from market price to pending order open
            price to freeze updates on the pending order. If the distance between
            order open price and current market price is less than this value, then
            you are not allowed to modify the pending order
    MetatraderSessions:
      type: object
      properties:
        SUNDAY:
          type: array
          description: array of sessions for SUNDAY
          items:
            $ref: '#/components/schemas/MetatraderSession'
        MONDAY:
          type: array
          description: array of sessions for MONDAY
          items:
            $ref: '#/components/schemas/MetatraderSession'
        TUESDAY:
          type: array
          description: array of sessions for TUESDAY
          items:
            $ref: '#/components/schemas/MetatraderSession'
        WEDNESDAY:
          type: array
          description: array of sessions for WEDNESDAY
          items:
            $ref: '#/components/schemas/MetatraderSession'
        THURSDAY:
          type: array
          description: array of sessions for THURSDAY
          items:
            $ref: '#/components/schemas/MetatraderSession'
        FRIDAY:
          type: array
          description: array of sessions for FRIDAY
          items:
            $ref: '#/components/schemas/MetatraderSession'
        SATURDAY:
          type: array
          description: array of sessions for SATURDAY
          items:
            $ref: '#/components/schemas/MetatraderSession'
    MetatraderSession:
      required:
      - from
      - to
      type: object
      properties:
        from:
          type: string
          description: session start time, in hh.mm.ss.SSS format
        to:
          type: string
          description: session end time, in hh.mm.ss.SSS format
    MetatraderSymbolPrice:
      required:
      - ask
      - bid
      - brokerTime
      - lossTickValue
      - profitTickValue
      - symbol
      - time
      type: object
      properties:
        symbol:
          type: string
          description: symbol (e.g. currency pair or an index)
        bid:
          type: number
          description: bid price
        ask:
          type: number
          description: ask price
        profitTickValue:
          type: number
          description: tick value for a profitable position
        lossTickValue:
          type: number
          description: tick value for a loosing position
        accountCurrencyExchangeRate:
          type: number
          description: current exchange rate of account currency into USD
        time:
          type: string
          description: quote time, in ISO format
          format: datetime
        brokerTime:
          type: string
          description: quote time, in broker timezone, YYYY-MM-DD HH:mm:ss.SSS format
    MetatraderCandle:
      required:
      - brokerTime
      - close
      - high
      - low
      - open
      - spread
      - symbol
      - tickVolume
      - time
      - timeframe
      - volume
      type: object
      properties:
        symbol:
          type: string
          description: symbol (e.g. currency pair or an index)
        timeframe:
          type: string
          description: timeframe candle was generated for, e.g. 1h
          enum:
          - 1m
          - 2m
          - 3m
          - 4m
          - 5m
          - 6m
          - 10m
          - 12m
          - 15m
          - 20m
          - 30m
          - 1h
          - 2h
          - 3h
          - 4h
          - 6h
          - 8h
          - 12h
          - 1d
          - 1w
          - 1mn
        time:
          type: string
          description: candle opening time, in [ISO format](https://en.wikipedia.org/wiki/ISO_8601)
          format: datetime
        brokerTime:
          type: string
          description: candle opening time, in broker timezone, YYYY-MM-DD HH:mm:ss.SSS
            format
        open:
          type: number
          description: open price
        high:
          type: number
          description: high price
        low:
          type: number
          description: low price
        close:
          type: number
          description: close price
        tickVolume:
          type: integer
          description: tick volume, i.e. number of ticks inside the candle
        spread:
          type: integer
          description: spread in points
        volume:
          type: integer
          description: trade volume
    MetatraderTick:
      required:
      - brokerTime
      - symbol
      - time
      type: object
      properties:
        symbol:
          type: string
          description: symbol (e.g. currency pair or an index)
        time:
          type: string
          description: time, in [ISO format](https://en.wikipedia.org/wiki/ISO_8601)
          format: datetime
        brokerTime:
          type: string
          description: time, in broker timezone, YYYY-MM-DD HH:mm:ss.SSS format
        bid:
          type: number
          description: bid price
        ask:
          type: number
          description: ask price
        last:
          type: number
          description: last deal price
        volume:
          type: number
          description: volume for the current last deal price
        side:
          type: string
          description: is tick a result of buy or sell deal
          enum:
          - buy
          - sell
    MetatraderBook:
      required:
      - book
      - symbol
      type: object
      properties:
        symbol:
          type: string
          description: symbol (e.g. currency pair or an index)
        time:
          type: string
          description: time, in [ISO format](https://en.wikipedia.org/wiki/ISO_8601)
          format: datetime
        brokerTime:
          type: string
          description: time, in broker timezone, YYYY-MM-DD HH:mm:ss.SSS format
        book:
          type: array
          description: list of order book entries
          items:
            $ref: '#/components/schemas/MetatraderBookEntry'
    MetatraderBookEntry:
      required:
      - price
      - type
      - volume
      type: object
      properties:
        type:
          type: string
          description: entry type
          enum:
          - BOOK_TYPE_SELL
          - BOOK_TYPE_BUY
          - BOOK_TYPE_SELL_MARKET
          - BOOK_TYPE_BUY_MARKET
        price:
          type: number
          description: price
        volume:
          type: number
          description: volume
    LastActivity:
      required:
      - lastActivity
      type: object
      properties:
        lastActivity:
          type: string
          description: New lastActivity field value
    ArrayOfCreditsByPeriod:
      required:
      - perAccount
      - perServer
      - perUser
      type: object
      properties:
        perUser:
          type: array
          description: The number of credits used from credits available to all deployed
            accounts
          items:
            $ref: '#/components/schemas/CreditsAndPeriod'
        perAccount:
          type: array
          description: The number of credits used from credits available for one account
          items:
            $ref: '#/components/schemas/CreditsAndPeriod'
        perServer:
          type: array
          description: The number of credits used from credits available on this server
          items:
            $ref: '#/components/schemas/CreditsAndPeriod'
    CreditsAndPeriod:
      required:
      - available
      - period
      - total
      type: object
      properties:
        period:
          type: string
          description: rate limiting period
        available:
          type: number
          description: the number of available credits for the period
        total:
          type: number
          description: total number of credits for the period
    SynchronizationStatus:
      required:
      - synchronized
      type: object
      properties:
        synchronized:
          type: boolean
          description: flag indicating if synchronization have completed
    HashingIgnoredFieldLists:
      required:
      - g1
      - g2
      type: object
      properties:
        g1:
          $ref: '#/components/schemas/HashingIgnoredFields'
        g2:
          $ref: '#/components/schemas/HashingIgnoredFields'
      description: Ignored fields for hash calculation
    HashingIgnoredFields:
      required:
      - order
      - position
      - specification
      type: object
      properties:
        specification:
          type: array
          description: Specification fields not included into hash calculation
          items:
            type: string
        position:
          type: array
          description: Position fields not included into hash calculation
          items:
            type: string
        order:
          type: array
          description: Order fields not included into hash calculation
          items:
            type: string
      description: Ignored fields for SDK hash calculation
    ServerTime:
      required:
      - brokerTime
      - time
      type: object
      properties:
        time:
          type: string
          description: current time, in ISO format
          format: datetime
        brokerTime:
          type: string
          description: current broker time, in broker timezone, YYYY-MM-DD HH:mm:ss.SSS
            format
        lastQuoteTime:
          type: string
          description: last quote time, in ISO format
          format: datetime
        lastQuoteBrokerTime:
          type: string
          description: last quote time, in broker timezone, YYYY-MM-DD HH:mm:ss.SSS
            format
      description: server time for an account
    MarginOrder:
      required:
      - openPrice
      - symbol
      - type
      - volume
      type: object
      properties:
        symbol:
          type: string
          description: order symbol
        type:
          type: string
          description: order type
          enum:
          - ORDER_TYPE_BUY
          - ORDER_TYPE_SELL
        volume:
          type: number
          description: order volume, must be greater than 0
        openPrice:
          type: number
          description: order open price, must be greater than 0
      description: Order to calculate margin for
    Margin:
      type: object
      properties:
        margin:
          type: number
          description: margin required to open a trade. If margin can not be calculated,
            then this field is not defined
      description: Margin required to open a trade
    SchedulerTask:
      required:
      - status
      type: object
      properties:
        status:
          $ref: '#/components/schemas/TaskStatus'
    TaskStatus:
      required:
      - completedAt
      - progress
      - startedAt
      - status
      type: object
      properties:
        status:
          type: string
          description: Task status
        startedAt:
          type: string
          description: Task started date
          format: date-time
        completedAt:
          type: string
          description: Task completed date
          format: date-time
        progress:
          type: object
          properties: {}
          description: Task progress
    DataSet:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: data set id
        description:
          type: string
          description: human-readable description
    DataSetParams:
      type: object
    HealthCheckResult:
      required:
      - output
      type: object
      properties:
        check:
          type: string
          description: id of the health check
        output:
          type: string
          description: health check output
    Error:
      required:
      - error
      - id
      - message
      type: object
      properties:
        id:
          type: integer
          description: Error id
        error:
          type: string
          description: Error name
        message:
          type: string
          description: Error description
        details:
          type: object
          properties: {}
          description: Additional information about error
        code:
          type: string
          description: Error code, used for i18n
        arguments:
          type: array
          description: Error message arguments, used for i18n
          items:
            type: object
            properties: {}
    TooManyRequestsError:
      required:
      - id
      - message
      - metadata
      - name
      type: object
      properties:
        id:
          type: integer
          description: Error id
        name:
          type: string
          description: Error name
        message:
          type: string
          description: Error description
        metadata:
          required:
          - recommendedRetryTime
          - requestsPerPeriodAllowed
          type: object
          properties:
            periodInMinutes:
              type: number
              description: rate limiting period in minutes
            requestsPerPeriodAllowed:
              type: number
              description: allowed number of requests per period
            recommendedRetryTime:
              type: string
              description: recommended time to retry request
              format: datetime
    AcceptedError:
      required:
      - id
      - message
      - metadata
      - name
      type: object
      properties:
        id:
          type: integer
          description: Error id
        name:
          type: string
          description: Error name
        message:
          type: string
          description: Error description
        metadata:
          required:
          - recommendedRetryTime
          type: object
          properties:
            recommendedRetryTime:
              type: string
              description: recommended time to retry request
              format: datetime
